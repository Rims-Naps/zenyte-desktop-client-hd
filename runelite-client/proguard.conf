-optimizationpasses 5
-overloadaggressively
-allowaccessmodification
-keepattributes
-keep class com.google.inject.Binder
-keep class com.google.inject.** { *; } 
-keep public class com.google.inject.internal.asm.util.$*
-keep class com.google.inject.internal.cglib.core.$*
-keep class com.google.inject.internal.util.$*
-keep class javax.inject.** { *; } 
-keep class javax.annotation.** { *; } 
-keep public class com.google.inject.Inject
-keep class net.runelite.standalone.client { *; }
-keep class net.runelite.client.** { *; }

-keepclassmembers class * {
    @com.google.inject.Inject <fields>;
    @com.google.inject.Inject <init>(...);
    @javax.inject.Inject <fields>;
    @javax.inject.Inject <init>(...);
}
-dontwarn

##---------------Begin: proguard configuration for Gson ----------
# Gson uses generic type information stored in a class file when working with
#fields. Proguard removes such information by default, so configure it to keep
#all of it.
-keepattributes Signature

# For using GSON @Expose annotation
-keepattributes *Annotation*

# Gson specific classes
-keep class sun.misc.Unsafe { *; }
#-keep class com.google.gson.stream.** { *; }

# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.examples.android.model.** { *; }

#-keep class com.zenyte.client.launcher.feed.FeedReader**
-keep class com.zenyte.client.launcher.configuration.Bootstrap**
-keepclassmembers class com.zenyte.client.launcher.configuration.Bootstrap** { *; }

#-keepclassmembers class com.zenyte.client.launcher.feed.FeedReader** { *; }

##---------------End: proguard configuration for Gson ----------

 # keeps all fields and Constructors with @Inject


